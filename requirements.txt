实验一、熟悉ORALCE环境并练习SQL操作
1.创建用户、给用户授权、连接用户
2.根据要求建立表
定义基本表格major_????（专业）与stud_???(学生），关系模式如下(类型长度自定义)：
major_???(MNO专业编号 Primary key, MNAME 专业名称,loc 地址 in(主校区，南校区，新校区，铁道校区，湘雅校区),mdean 专业负责人)）
stud_???(SNO primary key, SNAME, SEX (男，女，其它，其他),TEL ,E-MAIL (基本格式判断), birthday >=’19990731’ ,MNO 班长学号  fk，MajorNo 专业编号 FK ),
其中MajorNo 专业编号为学号的第3，4位。
3.插入样本数据
插入3个专业，如计算机科学与技术，物联网工程，数据科学与大数据技术，每个专业不小于10个人
测试相关的完整性约束，并注意保留出错的提示，分析出错的原因
4．为每个学生建立相关用户，实现权限控制，每个学生可查询自己的信息，班长可查询本班所有学生信息； 为每个专业负责建立用户，每个专业负责可查询本专业所有学生信息。

实验二、编写ORALCE触发器与过程
1．设计与建立上课考勤表Attend_???，能登记每个学生的考勤记录包括正常、迟到、旷课、请假。能统计以专业为单位的出勤类别并进行打分评价排序，如迟到、旷课、请假分别扣2，5，1分。可以考虑给一初始的分值，以免负值。
2．为major表与stud表增加sum_evaluation 数值字段，以记录根据考勤表Attend_???(Attendance)中出勤类别打分汇总的值。
3．建立个人考勤汇总表stud_attend与专业考勤表major_attend，表示每个学生或每个专业在某时间周期（起始日期，终止日期）正常、迟到、旷课、请假次数及考勤分值。
4．根据major表中的值与stud中的值，为考勤表Attend输入足够的样本值，要求每个专业都要有学生，有部分学生至少要有一周的每天5个单元（12，34，56，78，90，没有课的单元可以没有考勤记录）的考勤完整记录，其中正常、迟到、旷课、请假 可以用数字或字母符号表示。
5．建立触发器，当对考勤表Attend表进行相应插入、删除、修改时，对stud表的sum_evaluation 数值进行相应的数据更新。
6．建立过程，生成某专业某时段（起、止日期）的考勤汇总表major_attend中各字段值，并汇总相应专业，将考勤分值的汇总结果写入到major表中的sum_evaluation中。

实验三、基于大数据集的数据库操作
1.以常用“名字大全”与“百家姓”数据集为基础，生成不小于1千万条stud记录，要求，姓名的重复率不超过10%，学号以ABCD16EFGH为格式模板，即其中16是固定的，AB为从01到80，CD为从01到90，EF为01到50，GH为01到32；性别中，男、女占比为99%到99.5%。TEL与E-mail不作要求，但不能全空。Birthday要求从‘19940101’到‘19990731’分布。要求记录ORACLE数据文件的大小变化。（需要编制过程）
2．分别测试stud有主键与没有主键情形下生成记录的时间。
3．建立基于name的索引index_name，测试建立的时间与建立索引前后查询某一姓名及某一姓的时间长度。
4．测试索引index_name建立前后，分姓（简单地理解为姓名的第1，2位）的记录数统计时间。
5．按学号首位建立10个分区分别为part_0到part_9，测试建立分区前后分首位统计人数与分专业（EF位）统计人数的时间差别。

实验四、数据备份恢复与基于数据字典的数据库操作
1．建立对应3GB大小的外部文件的tablespace tabspace_????
2．重建MAJOR_????与STUD_????，指定存于建立的tabspace_????中，
3．重新产生样本值，包括千万级数据的STUD表，看是否有性能上的提升。
4．用EXP导出数据与IMP导入数据，请作多种尝试，直到成功！
5．尝试对系统表空间user及自定义表空间tabspace_????进行备份与恢复
6．登录DBA用户system，通过cat字典入口，找到以DBA_开头的相关数据字典，并且每个对象显示5条记录（SQL生成SQL）。
7．通过查找自己用户下的触发器字典，生成代码将所有触发器的状态改为disable并执行。再生成代码，将状态为disable的触发器的状态改为enable，并执行。









